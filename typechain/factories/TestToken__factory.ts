/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestToken, TestTokenInterface } from "../TestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_kycContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kycContract",
    outputs: [
      {
        internalType: "contract IKYCVerification",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260096080908152682a32b9ba2a37b5b2b760b91b60a0526002906200002a9082620001ee565b506040805180820190915260038082526214d51560ea1b602083015290620000539082620001ee565b503480156200006157600080fd5b5060405162000b0538038062000b058339810160408190526200008491620002ba565b3380620000ab57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b681620000f9565b5060018055600680546001600160a01b0319166001600160a01b03929092169190911790556103e8600481905533600090815260056020526040902055620002ec565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017457607f821691505b6020821081036200019557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e957600081815260208120601f850160051c81016020861015620001c45750805b601f850160051c820191505b81811015620001e557828155600101620001d0565b5050505b505050565b81516001600160401b038111156200020a576200020a62000149565b62000222816200021b84546200015f565b846200019b565b602080601f8311600181146200025a5760008415620002415750858301515b600019600386901b1c1916600185901b178555620001e5565b600085815260208120601f198616915b828110156200028b578886015182559484019460019091019084016200026a565b5085821015620002aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620002cd57600080fd5b81516001600160a01b0381168114620002e557600080fd5b9392505050565b61080980620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636d3123eb116100715780636d3123eb1461012b57806370a0823114610156578063715018a61461017f5780638da5cb5b1461018757806395d89b4114610198578063f2fde38b146101a057600080fd5b806306fdde03146100ae57806318160ddd146100cc57806327e235e3146100e357806340c10f191461010357806342966c6814610118575b600080fd5b6100b66101b3565b6040516100c39190610666565b60405180910390f35b6100d560045481565b6040519081526020016100c3565b6100d56100f13660046106d0565b60056020526000908152604090205481565b6101166101113660046106f2565b610241565b005b61011661012636600461071c565b610439565b60065461013e906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6100d56101643660046106d0565b6001600160a01b031660009081526005602052604090205490565b610116610563565b6000546001600160a01b031661013e565b6100b6610577565b6101166101ae3660046106d0565b610584565b600280546101c090610735565b80601f01602080910402602001604051908101604052809291908181526020018280546101ec90610735565b80156102395780601f1061020e57610100808354040283529160200191610239565b820191906000526020600020905b81548152906001019060200180831161021c57829003601f168201915b505050505081565b6102496105bf565b6102516105ec565b6001600160a01b03821661029e5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b600081116102ee5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610295565b600654604051638846594b60e01b81526001600160a01b03848116600483015290911690638846594b90602401602060405180830381865afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c919061076f565b6103a85760405162461bcd60e51b815260206004820152601a60248201527f526563697069656e74206e6f74204b59432076657269666965640000000000006044820152606401610295565b6001600160a01b038216600090815260056020526040812080548392906103d09084906107a7565b9250508190555080600460008282546103e991906107a7565b90915550506040518181526001600160a01b038316907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a261043560018055565b5050565b6104416105ec565b600081116104915760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610295565b336000908152600560205260409020548111156104e55760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b6044820152606401610295565b33600090815260056020526040812080548392906105049084906107c0565b92505081905550806004600082825461051d91906107c0565b909155505060405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a261056060018055565b50565b61056b6105bf565b6105756000610616565b565b600380546101c090610735565b61058c6105bf565b6001600160a01b0381166105b657604051631e4fbdf760e01b815260006004820152602401610295565b61056081610616565b6000546001600160a01b031633146105755760405163118cdaa760e01b8152336004820152602401610295565b60026001540361060f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b8181101561069357858101830151858201604001528201610677565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106cb57600080fd5b919050565b6000602082840312156106e257600080fd5b6106eb826106b4565b9392505050565b6000806040838503121561070557600080fd5b61070e836106b4565b946020939093013593505050565b60006020828403121561072e57600080fd5b5035919050565b600181811c9082168061074957607f821691505b60208210810361076957634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561078157600080fd5b815180151581146106eb57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156107ba576107ba610791565b92915050565b818103818111156107ba576107ba61079156fea2646970667358221220ef83f35e64fb9003af5b41973b4e7fe7ca612eac3d6f94de0af891801871d97764736f6c63430008140033";

export class TestToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _kycContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestToken> {
    return super.deploy(_kycContract, overrides || {}) as Promise<TestToken>;
  }
  getDeployTransaction(
    _kycContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_kycContract, overrides || {});
  }
  attach(address: string): TestToken {
    return super.attach(address) as TestToken;
  }
  connect(signer: Signer): TestToken__factory {
    return super.connect(signer) as TestToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new utils.Interface(_abi) as TestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestToken {
    return new Contract(address, _abi, signerOrProvider) as TestToken;
  }
}
